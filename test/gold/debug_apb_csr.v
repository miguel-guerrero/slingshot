
// File autogenerated by gen_csr 2.00

module debug_apb_csr(
   // outputs
   PRDATA,
   PREADY,
   PSLVERR,
   chain_tc_val,
   clr_sel_mode_any_val,
   clr_tc_mask0_val,
   clr_tc_mask1_val,
   clr_tc_mask2_val,
   clr_tc_mask3_val,
   clr_tc_mask4_val,
   clr_tc_mask5_val,
   clr_tc_mask6_val,
   clr_tc_mask7_val,
   clr_tc_mask8_val,
   clr_tc_mask9_val,
   clr_tc_mask10_val,
   clr_tc_mask11_val,
   inc_sel_mode_any_val,
   inc_tc_mask0_val,
   inc_tc_mask1_val,
   inc_tc_mask2_val,
   inc_tc_mask3_val,
   inc_tc_mask4_val,
   inc_tc_mask5_val,
   inc_tc_mask6_val,
   inc_tc_mask7_val,
   inc_tc_mask8_val,
   inc_tc_mask9_val,
   inc_tc_mask10_val,
   inc_tc_mask11_val,
   max_val0_r0_val_f0,
   max_val0_r1_val_f1,
   max_val1_r0_val_f0,
   max_val1_r1_val_f1,
   max_val2_r0_val_f0,
   max_val2_r1_val_f1,
   max_val3_r0_val_f0,
   max_val3_r1_val_f1,
   max_val4_r0_val_f0,
   max_val4_r1_val_f1,
   max_val5_r0_val_f0,
   max_val5_r1_val_f1,
   max_val6_r0_val_f0,
   max_val6_r1_val_f1,
   max_val7_r0_val_f0,
   max_val7_r1_val_f1,
   max_val8_r0_val_f0,
   max_val8_r1_val_f1,
   max_val9_r0_val_f0,
   max_val9_r1_val_f1,
   max_val10_r0_val_f0,
   max_val10_r1_val_f1,
   max_val11_r0_val_f0,
   max_val11_r1_val_f1,
   rel_mask0_val,
   rel_mask1_val,
   rel_mask2_val,
   rel_mask3_val,
   rel_mask4_val,
   rel_mask5_val,
   rel_mask6_val,
   rel_mask7_val,
   rel_mask8_val,
   rel_mask9_val,
   rel_mask10_val,
   rel_mask11_val,
   rel_mask12_val,
   rel_mask13_val,
   rel_mask14_val,
   rel_mask15_val,
   rel_mask16_val,
   rel_mask17_val,
   rel_mask18_val,
   rel_mask19_val,
   rel_mask20_val,
   rel_mask21_val,
   rel_mask22_val,
   rel_mask23_val,
   rel_mask24_val,
   rel_mask25_val,
   rel_mask26_val,
   rel_mask27_val,
   rel_mask28_val,
   rel_mask29_val,
   rel_mask30_val,
   rel_mask31_val,
   sel_delta_val,
   trig_inv_val,
   val_mask0_val,
   val_mask1_val,
   val_mask2_val,
   val_mask3_val,
   val_mask4_val,
   val_mask5_val,
   val_mask6_val,
   val_mask7_val,
   val_mask8_val,
   val_mask9_val,
   val_mask10_val,
   val_mask11_val,
   val_mask12_val,
   val_mask13_val,
   val_mask14_val,
   val_mask15_val,
   val_mask16_val,
   val_mask17_val,
   val_mask18_val,
   val_mask19_val,
   val_mask20_val,
   val_mask21_val,
   val_mask22_val,
   val_mask23_val,
   val_mask24_val,
   val_mask25_val,
   val_mask26_val,
   val_mask27_val,
   val_mask28_val,
   val_mask29_val,
   val_mask30_val,
   val_mask31_val,
   // inputs
   PCLK,
   PRESETN,
   PSEL,
   PENABLE,
   PWRITE,
   PADDR,
   PWDATA,
   cnt0_r0_val_f0,
   cnt0_r1_val_f1,
   cnt1_r0_val_f0,
   cnt1_r1_val_f1,
   cnt2_r0_val_f0,
   cnt2_r1_val_f1,
   cnt3_r0_val_f0,
   cnt3_r1_val_f1,
   cnt4_r0_val_f0,
   cnt4_r1_val_f1,
   cnt5_r0_val_f0,
   cnt5_r1_val_f1,
   cnt6_r0_val_f0,
   cnt6_r1_val_f1,
   cnt7_r0_val_f0,
   cnt7_r1_val_f1,
   cnt8_r0_val_f0,
   cnt8_r1_val_f1,
   cnt9_r0_val_f0,
   cnt9_r1_val_f1,
   cnt10_r0_val_f0,
   cnt10_r1_val_f1,
   cnt11_r0_val_f0,
   cnt11_r1_val_f1
);

//--- PORTS ---
input  PCLK ;
input  PRESETN ;
input  PSEL ;
input  PENABLE ;
input  PWRITE ;
input [ 31:0 ] PADDR ;
input [ 31:0 ] PWDATA ;
output [ 31:0 ] PRDATA ;
output  PREADY ;
output  PSLVERR ;
output [ 15:0 ] chain_tc_val ;
output [ 11:0 ] clr_sel_mode_any_val ;
output [ 31:0 ] clr_tc_mask0_val ;
output [ 31:0 ] clr_tc_mask1_val ;
output [ 31:0 ] clr_tc_mask2_val ;
output [ 31:0 ] clr_tc_mask3_val ;
output [ 31:0 ] clr_tc_mask4_val ;
output [ 31:0 ] clr_tc_mask5_val ;
output [ 31:0 ] clr_tc_mask6_val ;
output [ 31:0 ] clr_tc_mask7_val ;
output [ 31:0 ] clr_tc_mask8_val ;
output [ 31:0 ] clr_tc_mask9_val ;
output [ 31:0 ] clr_tc_mask10_val ;
output [ 31:0 ] clr_tc_mask11_val ;
output [ 11:0 ] inc_sel_mode_any_val ;
output [ 31:0 ] inc_tc_mask0_val ;
output [ 31:0 ] inc_tc_mask1_val ;
output [ 31:0 ] inc_tc_mask2_val ;
output [ 31:0 ] inc_tc_mask3_val ;
output [ 31:0 ] inc_tc_mask4_val ;
output [ 31:0 ] inc_tc_mask5_val ;
output [ 31:0 ] inc_tc_mask6_val ;
output [ 31:0 ] inc_tc_mask7_val ;
output [ 31:0 ] inc_tc_mask8_val ;
output [ 31:0 ] inc_tc_mask9_val ;
output [ 31:0 ] inc_tc_mask10_val ;
output [ 31:0 ] inc_tc_mask11_val ;
output [ 31:0 ] max_val0_r0_val_f0 ;
output [ 7:0 ] max_val0_r1_val_f1 ;
output [ 31:0 ] max_val1_r0_val_f0 ;
output [ 7:0 ] max_val1_r1_val_f1 ;
output [ 31:0 ] max_val2_r0_val_f0 ;
output [ 7:0 ] max_val2_r1_val_f1 ;
output [ 31:0 ] max_val3_r0_val_f0 ;
output [ 7:0 ] max_val3_r1_val_f1 ;
output [ 31:0 ] max_val4_r0_val_f0 ;
output [ 7:0 ] max_val4_r1_val_f1 ;
output [ 31:0 ] max_val5_r0_val_f0 ;
output [ 7:0 ] max_val5_r1_val_f1 ;
output [ 31:0 ] max_val6_r0_val_f0 ;
output [ 7:0 ] max_val6_r1_val_f1 ;
output [ 31:0 ] max_val7_r0_val_f0 ;
output [ 7:0 ] max_val7_r1_val_f1 ;
output [ 31:0 ] max_val8_r0_val_f0 ;
output [ 7:0 ] max_val8_r1_val_f1 ;
output [ 31:0 ] max_val9_r0_val_f0 ;
output [ 7:0 ] max_val9_r1_val_f1 ;
output [ 31:0 ] max_val10_r0_val_f0 ;
output [ 7:0 ] max_val10_r1_val_f1 ;
output [ 31:0 ] max_val11_r0_val_f0 ;
output [ 7:0 ] max_val11_r1_val_f1 ;
output [ 31:0 ] rel_mask0_val ;
output [ 31:0 ] rel_mask1_val ;
output [ 31:0 ] rel_mask2_val ;
output [ 31:0 ] rel_mask3_val ;
output [ 31:0 ] rel_mask4_val ;
output [ 31:0 ] rel_mask5_val ;
output [ 31:0 ] rel_mask6_val ;
output [ 31:0 ] rel_mask7_val ;
output [ 31:0 ] rel_mask8_val ;
output [ 31:0 ] rel_mask9_val ;
output [ 31:0 ] rel_mask10_val ;
output [ 31:0 ] rel_mask11_val ;
output [ 31:0 ] rel_mask12_val ;
output [ 31:0 ] rel_mask13_val ;
output [ 31:0 ] rel_mask14_val ;
output [ 31:0 ] rel_mask15_val ;
output [ 31:0 ] rel_mask16_val ;
output [ 31:0 ] rel_mask17_val ;
output [ 31:0 ] rel_mask18_val ;
output [ 31:0 ] rel_mask19_val ;
output [ 31:0 ] rel_mask20_val ;
output [ 31:0 ] rel_mask21_val ;
output [ 31:0 ] rel_mask22_val ;
output [ 31:0 ] rel_mask23_val ;
output [ 31:0 ] rel_mask24_val ;
output [ 31:0 ] rel_mask25_val ;
output [ 31:0 ] rel_mask26_val ;
output [ 31:0 ] rel_mask27_val ;
output [ 31:0 ] rel_mask28_val ;
output [ 31:0 ] rel_mask29_val ;
output [ 31:0 ] rel_mask30_val ;
output [ 31:0 ] rel_mask31_val ;
output [ 31:0 ] sel_delta_val ;
output [ 31:0 ] trig_inv_val ;
output [ 31:0 ] val_mask0_val ;
output [ 31:0 ] val_mask1_val ;
output [ 31:0 ] val_mask2_val ;
output [ 31:0 ] val_mask3_val ;
output [ 31:0 ] val_mask4_val ;
output [ 31:0 ] val_mask5_val ;
output [ 31:0 ] val_mask6_val ;
output [ 31:0 ] val_mask7_val ;
output [ 31:0 ] val_mask8_val ;
output [ 31:0 ] val_mask9_val ;
output [ 31:0 ] val_mask10_val ;
output [ 31:0 ] val_mask11_val ;
output [ 31:0 ] val_mask12_val ;
output [ 31:0 ] val_mask13_val ;
output [ 31:0 ] val_mask14_val ;
output [ 31:0 ] val_mask15_val ;
output [ 31:0 ] val_mask16_val ;
output [ 31:0 ] val_mask17_val ;
output [ 31:0 ] val_mask18_val ;
output [ 31:0 ] val_mask19_val ;
output [ 31:0 ] val_mask20_val ;
output [ 31:0 ] val_mask21_val ;
output [ 31:0 ] val_mask22_val ;
output [ 31:0 ] val_mask23_val ;
output [ 31:0 ] val_mask24_val ;
output [ 31:0 ] val_mask25_val ;
output [ 31:0 ] val_mask26_val ;
output [ 31:0 ] val_mask27_val ;
output [ 31:0 ] val_mask28_val ;
output [ 31:0 ] val_mask29_val ;
output [ 31:0 ] val_mask30_val ;
output [ 31:0 ] val_mask31_val ;
input [ 31:0 ] cnt0_r0_val_f0 ;
input [ 7:0 ] cnt0_r1_val_f1 ;
input [ 31:0 ] cnt1_r0_val_f0 ;
input [ 7:0 ] cnt1_r1_val_f1 ;
input [ 31:0 ] cnt2_r0_val_f0 ;
input [ 7:0 ] cnt2_r1_val_f1 ;
input [ 31:0 ] cnt3_r0_val_f0 ;
input [ 7:0 ] cnt3_r1_val_f1 ;
input [ 31:0 ] cnt4_r0_val_f0 ;
input [ 7:0 ] cnt4_r1_val_f1 ;
input [ 31:0 ] cnt5_r0_val_f0 ;
input [ 7:0 ] cnt5_r1_val_f1 ;
input [ 31:0 ] cnt6_r0_val_f0 ;
input [ 7:0 ] cnt6_r1_val_f1 ;
input [ 31:0 ] cnt7_r0_val_f0 ;
input [ 7:0 ] cnt7_r1_val_f1 ;
input [ 31:0 ] cnt8_r0_val_f0 ;
input [ 7:0 ] cnt8_r1_val_f1 ;
input [ 31:0 ] cnt9_r0_val_f0 ;
input [ 7:0 ] cnt9_r1_val_f1 ;
input [ 31:0 ] cnt10_r0_val_f0 ;
input [ 7:0 ] cnt10_r1_val_f1 ;
input [ 31:0 ] cnt11_r0_val_f0 ;
input [ 7:0 ] cnt11_r1_val_f1 ;



//--- DECL ---
reg [ 31:0 ] PRDATA ;
reg [ 31:0 ] PRDATA_D ;
reg PSEL_Q ;
reg rd_decerr ;
reg wr_decerr ;
reg [ 15:0 ] chain_tc_val ;
reg [ 15:0 ] chain_tc_val_D ;
reg [ 11:0 ] clr_sel_mode_any_val ;
reg [ 11:0 ] clr_sel_mode_any_val_D ;
reg [ 31:0 ] clr_tc_mask0_val ;
reg [ 31:0 ] clr_tc_mask0_val_D ;
reg [ 31:0 ] clr_tc_mask1_val ;
reg [ 31:0 ] clr_tc_mask1_val_D ;
reg [ 31:0 ] clr_tc_mask2_val ;
reg [ 31:0 ] clr_tc_mask2_val_D ;
reg [ 31:0 ] clr_tc_mask3_val ;
reg [ 31:0 ] clr_tc_mask3_val_D ;
reg [ 31:0 ] clr_tc_mask4_val ;
reg [ 31:0 ] clr_tc_mask4_val_D ;
reg [ 31:0 ] clr_tc_mask5_val ;
reg [ 31:0 ] clr_tc_mask5_val_D ;
reg [ 31:0 ] clr_tc_mask6_val ;
reg [ 31:0 ] clr_tc_mask6_val_D ;
reg [ 31:0 ] clr_tc_mask7_val ;
reg [ 31:0 ] clr_tc_mask7_val_D ;
reg [ 31:0 ] clr_tc_mask8_val ;
reg [ 31:0 ] clr_tc_mask8_val_D ;
reg [ 31:0 ] clr_tc_mask9_val ;
reg [ 31:0 ] clr_tc_mask9_val_D ;
reg [ 31:0 ] clr_tc_mask10_val ;
reg [ 31:0 ] clr_tc_mask10_val_D ;
reg [ 31:0 ] clr_tc_mask11_val ;
reg [ 31:0 ] clr_tc_mask11_val_D ;
reg [ 11:0 ] inc_sel_mode_any_val ;
reg [ 11:0 ] inc_sel_mode_any_val_D ;
reg [ 31:0 ] inc_tc_mask0_val ;
reg [ 31:0 ] inc_tc_mask0_val_D ;
reg [ 31:0 ] inc_tc_mask1_val ;
reg [ 31:0 ] inc_tc_mask1_val_D ;
reg [ 31:0 ] inc_tc_mask2_val ;
reg [ 31:0 ] inc_tc_mask2_val_D ;
reg [ 31:0 ] inc_tc_mask3_val ;
reg [ 31:0 ] inc_tc_mask3_val_D ;
reg [ 31:0 ] inc_tc_mask4_val ;
reg [ 31:0 ] inc_tc_mask4_val_D ;
reg [ 31:0 ] inc_tc_mask5_val ;
reg [ 31:0 ] inc_tc_mask5_val_D ;
reg [ 31:0 ] inc_tc_mask6_val ;
reg [ 31:0 ] inc_tc_mask6_val_D ;
reg [ 31:0 ] inc_tc_mask7_val ;
reg [ 31:0 ] inc_tc_mask7_val_D ;
reg [ 31:0 ] inc_tc_mask8_val ;
reg [ 31:0 ] inc_tc_mask8_val_D ;
reg [ 31:0 ] inc_tc_mask9_val ;
reg [ 31:0 ] inc_tc_mask9_val_D ;
reg [ 31:0 ] inc_tc_mask10_val ;
reg [ 31:0 ] inc_tc_mask10_val_D ;
reg [ 31:0 ] inc_tc_mask11_val ;
reg [ 31:0 ] inc_tc_mask11_val_D ;
reg [ 31:0 ] max_val0_r0_val_f0 ;
reg [ 31:0 ] max_val0_r0_val_f0_D ;
reg [ 7:0 ] max_val0_r1_val_f1 ;
reg [ 7:0 ] max_val0_r1_val_f1_D ;
reg [ 31:0 ] max_val1_r0_val_f0 ;
reg [ 31:0 ] max_val1_r0_val_f0_D ;
reg [ 7:0 ] max_val1_r1_val_f1 ;
reg [ 7:0 ] max_val1_r1_val_f1_D ;
reg [ 31:0 ] max_val2_r0_val_f0 ;
reg [ 31:0 ] max_val2_r0_val_f0_D ;
reg [ 7:0 ] max_val2_r1_val_f1 ;
reg [ 7:0 ] max_val2_r1_val_f1_D ;
reg [ 31:0 ] max_val3_r0_val_f0 ;
reg [ 31:0 ] max_val3_r0_val_f0_D ;
reg [ 7:0 ] max_val3_r1_val_f1 ;
reg [ 7:0 ] max_val3_r1_val_f1_D ;
reg [ 31:0 ] max_val4_r0_val_f0 ;
reg [ 31:0 ] max_val4_r0_val_f0_D ;
reg [ 7:0 ] max_val4_r1_val_f1 ;
reg [ 7:0 ] max_val4_r1_val_f1_D ;
reg [ 31:0 ] max_val5_r0_val_f0 ;
reg [ 31:0 ] max_val5_r0_val_f0_D ;
reg [ 7:0 ] max_val5_r1_val_f1 ;
reg [ 7:0 ] max_val5_r1_val_f1_D ;
reg [ 31:0 ] max_val6_r0_val_f0 ;
reg [ 31:0 ] max_val6_r0_val_f0_D ;
reg [ 7:0 ] max_val6_r1_val_f1 ;
reg [ 7:0 ] max_val6_r1_val_f1_D ;
reg [ 31:0 ] max_val7_r0_val_f0 ;
reg [ 31:0 ] max_val7_r0_val_f0_D ;
reg [ 7:0 ] max_val7_r1_val_f1 ;
reg [ 7:0 ] max_val7_r1_val_f1_D ;
reg [ 31:0 ] max_val8_r0_val_f0 ;
reg [ 31:0 ] max_val8_r0_val_f0_D ;
reg [ 7:0 ] max_val8_r1_val_f1 ;
reg [ 7:0 ] max_val8_r1_val_f1_D ;
reg [ 31:0 ] max_val9_r0_val_f0 ;
reg [ 31:0 ] max_val9_r0_val_f0_D ;
reg [ 7:0 ] max_val9_r1_val_f1 ;
reg [ 7:0 ] max_val9_r1_val_f1_D ;
reg [ 31:0 ] max_val10_r0_val_f0 ;
reg [ 31:0 ] max_val10_r0_val_f0_D ;
reg [ 7:0 ] max_val10_r1_val_f1 ;
reg [ 7:0 ] max_val10_r1_val_f1_D ;
reg [ 31:0 ] max_val11_r0_val_f0 ;
reg [ 31:0 ] max_val11_r0_val_f0_D ;
reg [ 7:0 ] max_val11_r1_val_f1 ;
reg [ 7:0 ] max_val11_r1_val_f1_D ;
reg [ 31:0 ] rel_mask0_val ;
reg [ 31:0 ] rel_mask0_val_D ;
reg [ 31:0 ] rel_mask1_val ;
reg [ 31:0 ] rel_mask1_val_D ;
reg [ 31:0 ] rel_mask2_val ;
reg [ 31:0 ] rel_mask2_val_D ;
reg [ 31:0 ] rel_mask3_val ;
reg [ 31:0 ] rel_mask3_val_D ;
reg [ 31:0 ] rel_mask4_val ;
reg [ 31:0 ] rel_mask4_val_D ;
reg [ 31:0 ] rel_mask5_val ;
reg [ 31:0 ] rel_mask5_val_D ;
reg [ 31:0 ] rel_mask6_val ;
reg [ 31:0 ] rel_mask6_val_D ;
reg [ 31:0 ] rel_mask7_val ;
reg [ 31:0 ] rel_mask7_val_D ;
reg [ 31:0 ] rel_mask8_val ;
reg [ 31:0 ] rel_mask8_val_D ;
reg [ 31:0 ] rel_mask9_val ;
reg [ 31:0 ] rel_mask9_val_D ;
reg [ 31:0 ] rel_mask10_val ;
reg [ 31:0 ] rel_mask10_val_D ;
reg [ 31:0 ] rel_mask11_val ;
reg [ 31:0 ] rel_mask11_val_D ;
reg [ 31:0 ] rel_mask12_val ;
reg [ 31:0 ] rel_mask12_val_D ;
reg [ 31:0 ] rel_mask13_val ;
reg [ 31:0 ] rel_mask13_val_D ;
reg [ 31:0 ] rel_mask14_val ;
reg [ 31:0 ] rel_mask14_val_D ;
reg [ 31:0 ] rel_mask15_val ;
reg [ 31:0 ] rel_mask15_val_D ;
reg [ 31:0 ] rel_mask16_val ;
reg [ 31:0 ] rel_mask16_val_D ;
reg [ 31:0 ] rel_mask17_val ;
reg [ 31:0 ] rel_mask17_val_D ;
reg [ 31:0 ] rel_mask18_val ;
reg [ 31:0 ] rel_mask18_val_D ;
reg [ 31:0 ] rel_mask19_val ;
reg [ 31:0 ] rel_mask19_val_D ;
reg [ 31:0 ] rel_mask20_val ;
reg [ 31:0 ] rel_mask20_val_D ;
reg [ 31:0 ] rel_mask21_val ;
reg [ 31:0 ] rel_mask21_val_D ;
reg [ 31:0 ] rel_mask22_val ;
reg [ 31:0 ] rel_mask22_val_D ;
reg [ 31:0 ] rel_mask23_val ;
reg [ 31:0 ] rel_mask23_val_D ;
reg [ 31:0 ] rel_mask24_val ;
reg [ 31:0 ] rel_mask24_val_D ;
reg [ 31:0 ] rel_mask25_val ;
reg [ 31:0 ] rel_mask25_val_D ;
reg [ 31:0 ] rel_mask26_val ;
reg [ 31:0 ] rel_mask26_val_D ;
reg [ 31:0 ] rel_mask27_val ;
reg [ 31:0 ] rel_mask27_val_D ;
reg [ 31:0 ] rel_mask28_val ;
reg [ 31:0 ] rel_mask28_val_D ;
reg [ 31:0 ] rel_mask29_val ;
reg [ 31:0 ] rel_mask29_val_D ;
reg [ 31:0 ] rel_mask30_val ;
reg [ 31:0 ] rel_mask30_val_D ;
reg [ 31:0 ] rel_mask31_val ;
reg [ 31:0 ] rel_mask31_val_D ;
reg [ 31:0 ] sel_delta_val ;
reg [ 31:0 ] sel_delta_val_D ;
reg [ 31:0 ] trig_inv_val ;
reg [ 31:0 ] trig_inv_val_D ;
reg [ 31:0 ] val_mask0_val ;
reg [ 31:0 ] val_mask0_val_D ;
reg [ 31:0 ] val_mask1_val ;
reg [ 31:0 ] val_mask1_val_D ;
reg [ 31:0 ] val_mask2_val ;
reg [ 31:0 ] val_mask2_val_D ;
reg [ 31:0 ] val_mask3_val ;
reg [ 31:0 ] val_mask3_val_D ;
reg [ 31:0 ] val_mask4_val ;
reg [ 31:0 ] val_mask4_val_D ;
reg [ 31:0 ] val_mask5_val ;
reg [ 31:0 ] val_mask5_val_D ;
reg [ 31:0 ] val_mask6_val ;
reg [ 31:0 ] val_mask6_val_D ;
reg [ 31:0 ] val_mask7_val ;
reg [ 31:0 ] val_mask7_val_D ;
reg [ 31:0 ] val_mask8_val ;
reg [ 31:0 ] val_mask8_val_D ;
reg [ 31:0 ] val_mask9_val ;
reg [ 31:0 ] val_mask9_val_D ;
reg [ 31:0 ] val_mask10_val ;
reg [ 31:0 ] val_mask10_val_D ;
reg [ 31:0 ] val_mask11_val ;
reg [ 31:0 ] val_mask11_val_D ;
reg [ 31:0 ] val_mask12_val ;
reg [ 31:0 ] val_mask12_val_D ;
reg [ 31:0 ] val_mask13_val ;
reg [ 31:0 ] val_mask13_val_D ;
reg [ 31:0 ] val_mask14_val ;
reg [ 31:0 ] val_mask14_val_D ;
reg [ 31:0 ] val_mask15_val ;
reg [ 31:0 ] val_mask15_val_D ;
reg [ 31:0 ] val_mask16_val ;
reg [ 31:0 ] val_mask16_val_D ;
reg [ 31:0 ] val_mask17_val ;
reg [ 31:0 ] val_mask17_val_D ;
reg [ 31:0 ] val_mask18_val ;
reg [ 31:0 ] val_mask18_val_D ;
reg [ 31:0 ] val_mask19_val ;
reg [ 31:0 ] val_mask19_val_D ;
reg [ 31:0 ] val_mask20_val ;
reg [ 31:0 ] val_mask20_val_D ;
reg [ 31:0 ] val_mask21_val ;
reg [ 31:0 ] val_mask21_val_D ;
reg [ 31:0 ] val_mask22_val ;
reg [ 31:0 ] val_mask22_val_D ;
reg [ 31:0 ] val_mask23_val ;
reg [ 31:0 ] val_mask23_val_D ;
reg [ 31:0 ] val_mask24_val ;
reg [ 31:0 ] val_mask24_val_D ;
reg [ 31:0 ] val_mask25_val ;
reg [ 31:0 ] val_mask25_val_D ;
reg [ 31:0 ] val_mask26_val ;
reg [ 31:0 ] val_mask26_val_D ;
reg [ 31:0 ] val_mask27_val ;
reg [ 31:0 ] val_mask27_val_D ;
reg [ 31:0 ] val_mask28_val ;
reg [ 31:0 ] val_mask28_val_D ;
reg [ 31:0 ] val_mask29_val ;
reg [ 31:0 ] val_mask29_val_D ;
reg [ 31:0 ] val_mask30_val ;
reg [ 31:0 ] val_mask30_val_D ;
reg [ 31:0 ] val_mask31_val ;
reg [ 31:0 ] val_mask31_val_D ;
reg [ 31:0 ] cnt0_r0_val_f0_D ;
reg [ 7:0 ] cnt0_r1_val_f1_D ;
reg [ 31:0 ] cnt1_r0_val_f0_D ;
reg [ 7:0 ] cnt1_r1_val_f1_D ;
reg [ 31:0 ] cnt2_r0_val_f0_D ;
reg [ 7:0 ] cnt2_r1_val_f1_D ;
reg [ 31:0 ] cnt3_r0_val_f0_D ;
reg [ 7:0 ] cnt3_r1_val_f1_D ;
reg [ 31:0 ] cnt4_r0_val_f0_D ;
reg [ 7:0 ] cnt4_r1_val_f1_D ;
reg [ 31:0 ] cnt5_r0_val_f0_D ;
reg [ 7:0 ] cnt5_r1_val_f1_D ;
reg [ 31:0 ] cnt6_r0_val_f0_D ;
reg [ 7:0 ] cnt6_r1_val_f1_D ;
reg [ 31:0 ] cnt7_r0_val_f0_D ;
reg [ 7:0 ] cnt7_r1_val_f1_D ;
reg [ 31:0 ] cnt8_r0_val_f0_D ;
reg [ 7:0 ] cnt8_r1_val_f1_D ;
reg [ 31:0 ] cnt9_r0_val_f0_D ;
reg [ 7:0 ] cnt9_r1_val_f1_D ;
reg [ 31:0 ] cnt10_r0_val_f0_D ;
reg [ 7:0 ] cnt10_r1_val_f1_D ;
reg [ 31:0 ] cnt11_r0_val_f0_D ;
reg [ 7:0 ] cnt11_r1_val_f1_D ;




always @(posedge PCLK or negedge PRESETN) begin
   if (PRESETN == 0)
      PSEL_Q <= 1'b0;
   else
      PSEL_Q <= PSEL;
end

always @(posedge PCLK or negedge PRESETN) begin
   if (PRESETN == 0)
      PRDATA <= 'h0;
   else if (PSEL & ~PWRITE)
      PRDATA <= PRDATA_D;
   else
      PRDATA <= PRDATA;
end

always @(*) begin
   // --- read ---
   PRDATA_D = 32'h0 ;
   rd_decerr = 1'b0 ;
   if (PSEL & ~PWRITE) begin
      case (PADDR)
         32'h0 : begin // chain_tc
            PRDATA_D[ 15:0 ] = chain_tc_val ;
         end
         32'h4 : begin // clr_sel_mode_any
            PRDATA_D[ 11:0 ] = clr_sel_mode_any_val ;
         end
         32'h8 : begin // clr_tc_mask0
            PRDATA_D[ 31:0 ] = clr_tc_mask0_val ;
         end
         32'hC : begin // clr_tc_mask1
            PRDATA_D[ 31:0 ] = clr_tc_mask1_val ;
         end
         32'h10 : begin // clr_tc_mask2
            PRDATA_D[ 31:0 ] = clr_tc_mask2_val ;
         end
         32'h14 : begin // clr_tc_mask3
            PRDATA_D[ 31:0 ] = clr_tc_mask3_val ;
         end
         32'h18 : begin // clr_tc_mask4
            PRDATA_D[ 31:0 ] = clr_tc_mask4_val ;
         end
         32'h1C : begin // clr_tc_mask5
            PRDATA_D[ 31:0 ] = clr_tc_mask5_val ;
         end
         32'h20 : begin // clr_tc_mask6
            PRDATA_D[ 31:0 ] = clr_tc_mask6_val ;
         end
         32'h24 : begin // clr_tc_mask7
            PRDATA_D[ 31:0 ] = clr_tc_mask7_val ;
         end
         32'h28 : begin // clr_tc_mask8
            PRDATA_D[ 31:0 ] = clr_tc_mask8_val ;
         end
         32'h2C : begin // clr_tc_mask9
            PRDATA_D[ 31:0 ] = clr_tc_mask9_val ;
         end
         32'h30 : begin // clr_tc_mask10
            PRDATA_D[ 31:0 ] = clr_tc_mask10_val ;
         end
         32'h34 : begin // clr_tc_mask11
            PRDATA_D[ 31:0 ] = clr_tc_mask11_val ;
         end
         32'h38 : begin // inc_sel_mode_any
            PRDATA_D[ 11:0 ] = inc_sel_mode_any_val ;
         end
         32'h3C : begin // inc_tc_mask0
            PRDATA_D[ 31:0 ] = inc_tc_mask0_val ;
         end
         32'h40 : begin // inc_tc_mask1
            PRDATA_D[ 31:0 ] = inc_tc_mask1_val ;
         end
         32'h44 : begin // inc_tc_mask2
            PRDATA_D[ 31:0 ] = inc_tc_mask2_val ;
         end
         32'h48 : begin // inc_tc_mask3
            PRDATA_D[ 31:0 ] = inc_tc_mask3_val ;
         end
         32'h4C : begin // inc_tc_mask4
            PRDATA_D[ 31:0 ] = inc_tc_mask4_val ;
         end
         32'h50 : begin // inc_tc_mask5
            PRDATA_D[ 31:0 ] = inc_tc_mask5_val ;
         end
         32'h54 : begin // inc_tc_mask6
            PRDATA_D[ 31:0 ] = inc_tc_mask6_val ;
         end
         32'h58 : begin // inc_tc_mask7
            PRDATA_D[ 31:0 ] = inc_tc_mask7_val ;
         end
         32'h5C : begin // inc_tc_mask8
            PRDATA_D[ 31:0 ] = inc_tc_mask8_val ;
         end
         32'h60 : begin // inc_tc_mask9
            PRDATA_D[ 31:0 ] = inc_tc_mask9_val ;
         end
         32'h64 : begin // inc_tc_mask10
            PRDATA_D[ 31:0 ] = inc_tc_mask10_val ;
         end
         32'h68 : begin // inc_tc_mask11
            PRDATA_D[ 31:0 ] = inc_tc_mask11_val ;
         end
         32'h6C : begin // max_val0_r0
            PRDATA_D[ 31:0 ] = max_val0_r0_val_f0 ;
         end
         32'h70 : begin // max_val0_r1
            PRDATA_D[ 7:0 ] = max_val0_r1_val_f1 ;
         end
         32'h74 : begin // max_val1_r0
            PRDATA_D[ 31:0 ] = max_val1_r0_val_f0 ;
         end
         32'h78 : begin // max_val1_r1
            PRDATA_D[ 7:0 ] = max_val1_r1_val_f1 ;
         end
         32'h7C : begin // max_val2_r0
            PRDATA_D[ 31:0 ] = max_val2_r0_val_f0 ;
         end
         32'h80 : begin // max_val2_r1
            PRDATA_D[ 7:0 ] = max_val2_r1_val_f1 ;
         end
         32'h84 : begin // max_val3_r0
            PRDATA_D[ 31:0 ] = max_val3_r0_val_f0 ;
         end
         32'h88 : begin // max_val3_r1
            PRDATA_D[ 7:0 ] = max_val3_r1_val_f1 ;
         end
         32'h8C : begin // max_val4_r0
            PRDATA_D[ 31:0 ] = max_val4_r0_val_f0 ;
         end
         32'h90 : begin // max_val4_r1
            PRDATA_D[ 7:0 ] = max_val4_r1_val_f1 ;
         end
         32'h94 : begin // max_val5_r0
            PRDATA_D[ 31:0 ] = max_val5_r0_val_f0 ;
         end
         32'h98 : begin // max_val5_r1
            PRDATA_D[ 7:0 ] = max_val5_r1_val_f1 ;
         end
         32'h9C : begin // max_val6_r0
            PRDATA_D[ 31:0 ] = max_val6_r0_val_f0 ;
         end
         32'hA0 : begin // max_val6_r1
            PRDATA_D[ 7:0 ] = max_val6_r1_val_f1 ;
         end
         32'hA4 : begin // max_val7_r0
            PRDATA_D[ 31:0 ] = max_val7_r0_val_f0 ;
         end
         32'hA8 : begin // max_val7_r1
            PRDATA_D[ 7:0 ] = max_val7_r1_val_f1 ;
         end
         32'hAC : begin // max_val8_r0
            PRDATA_D[ 31:0 ] = max_val8_r0_val_f0 ;
         end
         32'hB0 : begin // max_val8_r1
            PRDATA_D[ 7:0 ] = max_val8_r1_val_f1 ;
         end
         32'hB4 : begin // max_val9_r0
            PRDATA_D[ 31:0 ] = max_val9_r0_val_f0 ;
         end
         32'hB8 : begin // max_val9_r1
            PRDATA_D[ 7:0 ] = max_val9_r1_val_f1 ;
         end
         32'hBC : begin // max_val10_r0
            PRDATA_D[ 31:0 ] = max_val10_r0_val_f0 ;
         end
         32'hC0 : begin // max_val10_r1
            PRDATA_D[ 7:0 ] = max_val10_r1_val_f1 ;
         end
         32'hC4 : begin // max_val11_r0
            PRDATA_D[ 31:0 ] = max_val11_r0_val_f0 ;
         end
         32'hC8 : begin // max_val11_r1
            PRDATA_D[ 7:0 ] = max_val11_r1_val_f1 ;
         end
         32'hCC : begin // rel_mask0
            PRDATA_D[ 31:0 ] = rel_mask0_val ;
         end
         32'hD0 : begin // rel_mask1
            PRDATA_D[ 31:0 ] = rel_mask1_val ;
         end
         32'hD4 : begin // rel_mask2
            PRDATA_D[ 31:0 ] = rel_mask2_val ;
         end
         32'hD8 : begin // rel_mask3
            PRDATA_D[ 31:0 ] = rel_mask3_val ;
         end
         32'hDC : begin // rel_mask4
            PRDATA_D[ 31:0 ] = rel_mask4_val ;
         end
         32'hE0 : begin // rel_mask5
            PRDATA_D[ 31:0 ] = rel_mask5_val ;
         end
         32'hE4 : begin // rel_mask6
            PRDATA_D[ 31:0 ] = rel_mask6_val ;
         end
         32'hE8 : begin // rel_mask7
            PRDATA_D[ 31:0 ] = rel_mask7_val ;
         end
         32'hEC : begin // rel_mask8
            PRDATA_D[ 31:0 ] = rel_mask8_val ;
         end
         32'hF0 : begin // rel_mask9
            PRDATA_D[ 31:0 ] = rel_mask9_val ;
         end
         32'hF4 : begin // rel_mask10
            PRDATA_D[ 31:0 ] = rel_mask10_val ;
         end
         32'hF8 : begin // rel_mask11
            PRDATA_D[ 31:0 ] = rel_mask11_val ;
         end
         32'hFC : begin // rel_mask12
            PRDATA_D[ 31:0 ] = rel_mask12_val ;
         end
         32'h100 : begin // rel_mask13
            PRDATA_D[ 31:0 ] = rel_mask13_val ;
         end
         32'h104 : begin // rel_mask14
            PRDATA_D[ 31:0 ] = rel_mask14_val ;
         end
         32'h108 : begin // rel_mask15
            PRDATA_D[ 31:0 ] = rel_mask15_val ;
         end
         32'h10C : begin // rel_mask16
            PRDATA_D[ 31:0 ] = rel_mask16_val ;
         end
         32'h110 : begin // rel_mask17
            PRDATA_D[ 31:0 ] = rel_mask17_val ;
         end
         32'h114 : begin // rel_mask18
            PRDATA_D[ 31:0 ] = rel_mask18_val ;
         end
         32'h118 : begin // rel_mask19
            PRDATA_D[ 31:0 ] = rel_mask19_val ;
         end
         32'h11C : begin // rel_mask20
            PRDATA_D[ 31:0 ] = rel_mask20_val ;
         end
         32'h120 : begin // rel_mask21
            PRDATA_D[ 31:0 ] = rel_mask21_val ;
         end
         32'h124 : begin // rel_mask22
            PRDATA_D[ 31:0 ] = rel_mask22_val ;
         end
         32'h128 : begin // rel_mask23
            PRDATA_D[ 31:0 ] = rel_mask23_val ;
         end
         32'h12C : begin // rel_mask24
            PRDATA_D[ 31:0 ] = rel_mask24_val ;
         end
         32'h130 : begin // rel_mask25
            PRDATA_D[ 31:0 ] = rel_mask25_val ;
         end
         32'h134 : begin // rel_mask26
            PRDATA_D[ 31:0 ] = rel_mask26_val ;
         end
         32'h138 : begin // rel_mask27
            PRDATA_D[ 31:0 ] = rel_mask27_val ;
         end
         32'h13C : begin // rel_mask28
            PRDATA_D[ 31:0 ] = rel_mask28_val ;
         end
         32'h140 : begin // rel_mask29
            PRDATA_D[ 31:0 ] = rel_mask29_val ;
         end
         32'h144 : begin // rel_mask30
            PRDATA_D[ 31:0 ] = rel_mask30_val ;
         end
         32'h148 : begin // rel_mask31
            PRDATA_D[ 31:0 ] = rel_mask31_val ;
         end
         32'h14C : begin // sel_delta
            PRDATA_D[ 31:0 ] = sel_delta_val ;
         end
         32'h150 : begin // trig_inv
            PRDATA_D[ 31:0 ] = trig_inv_val ;
         end
         32'h154 : begin // val_mask0
            PRDATA_D[ 31:0 ] = val_mask0_val ;
         end
         32'h158 : begin // val_mask1
            PRDATA_D[ 31:0 ] = val_mask1_val ;
         end
         32'h15C : begin // val_mask2
            PRDATA_D[ 31:0 ] = val_mask2_val ;
         end
         32'h160 : begin // val_mask3
            PRDATA_D[ 31:0 ] = val_mask3_val ;
         end
         32'h164 : begin // val_mask4
            PRDATA_D[ 31:0 ] = val_mask4_val ;
         end
         32'h168 : begin // val_mask5
            PRDATA_D[ 31:0 ] = val_mask5_val ;
         end
         32'h16C : begin // val_mask6
            PRDATA_D[ 31:0 ] = val_mask6_val ;
         end
         32'h170 : begin // val_mask7
            PRDATA_D[ 31:0 ] = val_mask7_val ;
         end
         32'h174 : begin // val_mask8
            PRDATA_D[ 31:0 ] = val_mask8_val ;
         end
         32'h178 : begin // val_mask9
            PRDATA_D[ 31:0 ] = val_mask9_val ;
         end
         32'h17C : begin // val_mask10
            PRDATA_D[ 31:0 ] = val_mask10_val ;
         end
         32'h180 : begin // val_mask11
            PRDATA_D[ 31:0 ] = val_mask11_val ;
         end
         32'h184 : begin // val_mask12
            PRDATA_D[ 31:0 ] = val_mask12_val ;
         end
         32'h188 : begin // val_mask13
            PRDATA_D[ 31:0 ] = val_mask13_val ;
         end
         32'h18C : begin // val_mask14
            PRDATA_D[ 31:0 ] = val_mask14_val ;
         end
         32'h190 : begin // val_mask15
            PRDATA_D[ 31:0 ] = val_mask15_val ;
         end
         32'h194 : begin // val_mask16
            PRDATA_D[ 31:0 ] = val_mask16_val ;
         end
         32'h198 : begin // val_mask17
            PRDATA_D[ 31:0 ] = val_mask17_val ;
         end
         32'h19C : begin // val_mask18
            PRDATA_D[ 31:0 ] = val_mask18_val ;
         end
         32'h1A0 : begin // val_mask19
            PRDATA_D[ 31:0 ] = val_mask19_val ;
         end
         32'h1A4 : begin // val_mask20
            PRDATA_D[ 31:0 ] = val_mask20_val ;
         end
         32'h1A8 : begin // val_mask21
            PRDATA_D[ 31:0 ] = val_mask21_val ;
         end
         32'h1AC : begin // val_mask22
            PRDATA_D[ 31:0 ] = val_mask22_val ;
         end
         32'h1B0 : begin // val_mask23
            PRDATA_D[ 31:0 ] = val_mask23_val ;
         end
         32'h1B4 : begin // val_mask24
            PRDATA_D[ 31:0 ] = val_mask24_val ;
         end
         32'h1B8 : begin // val_mask25
            PRDATA_D[ 31:0 ] = val_mask25_val ;
         end
         32'h1BC : begin // val_mask26
            PRDATA_D[ 31:0 ] = val_mask26_val ;
         end
         32'h1C0 : begin // val_mask27
            PRDATA_D[ 31:0 ] = val_mask27_val ;
         end
         32'h1C4 : begin // val_mask28
            PRDATA_D[ 31:0 ] = val_mask28_val ;
         end
         32'h1C8 : begin // val_mask29
            PRDATA_D[ 31:0 ] = val_mask29_val ;
         end
         32'h1CC : begin // val_mask30
            PRDATA_D[ 31:0 ] = val_mask30_val ;
         end
         32'h1D0 : begin // val_mask31
            PRDATA_D[ 31:0 ] = val_mask31_val ;
         end
         32'h1D4 : begin // cnt0_r0
            PRDATA_D[ 31:0 ] = cnt0_r0_val_f0 ;
         end
         32'h1D8 : begin // cnt0_r1
            PRDATA_D[ 7:0 ] = cnt0_r1_val_f1 ;
         end
         32'h1DC : begin // cnt1_r0
            PRDATA_D[ 31:0 ] = cnt1_r0_val_f0 ;
         end
         32'h1E0 : begin // cnt1_r1
            PRDATA_D[ 7:0 ] = cnt1_r1_val_f1 ;
         end
         32'h1E4 : begin // cnt2_r0
            PRDATA_D[ 31:0 ] = cnt2_r0_val_f0 ;
         end
         32'h1E8 : begin // cnt2_r1
            PRDATA_D[ 7:0 ] = cnt2_r1_val_f1 ;
         end
         32'h1EC : begin // cnt3_r0
            PRDATA_D[ 31:0 ] = cnt3_r0_val_f0 ;
         end
         32'h1F0 : begin // cnt3_r1
            PRDATA_D[ 7:0 ] = cnt3_r1_val_f1 ;
         end
         32'h1F4 : begin // cnt4_r0
            PRDATA_D[ 31:0 ] = cnt4_r0_val_f0 ;
         end
         32'h1F8 : begin // cnt4_r1
            PRDATA_D[ 7:0 ] = cnt4_r1_val_f1 ;
         end
         32'h1FC : begin // cnt5_r0
            PRDATA_D[ 31:0 ] = cnt5_r0_val_f0 ;
         end
         32'h200 : begin // cnt5_r1
            PRDATA_D[ 7:0 ] = cnt5_r1_val_f1 ;
         end
         32'h204 : begin // cnt6_r0
            PRDATA_D[ 31:0 ] = cnt6_r0_val_f0 ;
         end
         32'h208 : begin // cnt6_r1
            PRDATA_D[ 7:0 ] = cnt6_r1_val_f1 ;
         end
         32'h20C : begin // cnt7_r0
            PRDATA_D[ 31:0 ] = cnt7_r0_val_f0 ;
         end
         32'h210 : begin // cnt7_r1
            PRDATA_D[ 7:0 ] = cnt7_r1_val_f1 ;
         end
         32'h214 : begin // cnt8_r0
            PRDATA_D[ 31:0 ] = cnt8_r0_val_f0 ;
         end
         32'h218 : begin // cnt8_r1
            PRDATA_D[ 7:0 ] = cnt8_r1_val_f1 ;
         end
         32'h21C : begin // cnt9_r0
            PRDATA_D[ 31:0 ] = cnt9_r0_val_f0 ;
         end
         32'h220 : begin // cnt9_r1
            PRDATA_D[ 7:0 ] = cnt9_r1_val_f1 ;
         end
         32'h224 : begin // cnt10_r0
            PRDATA_D[ 31:0 ] = cnt10_r0_val_f0 ;
         end
         32'h228 : begin // cnt10_r1
            PRDATA_D[ 7:0 ] = cnt10_r1_val_f1 ;
         end
         32'h22C : begin // cnt11_r0
            PRDATA_D[ 31:0 ] = cnt11_r0_val_f0 ;
         end
         32'h230 : begin // cnt11_r1
            PRDATA_D[ 7:0 ] = cnt11_r1_val_f1 ;
         end
         default: begin
            PRDATA_D = 32'hbad00add ;
            rd_decerr = 1'b1 ;
         end
      endcase
   end

end

always @(*) begin
   // --- write ---
   wr_decerr = 1'b0 ;
   chain_tc_val_D = chain_tc_val ;
   clr_sel_mode_any_val_D = clr_sel_mode_any_val ;
   clr_tc_mask0_val_D = clr_tc_mask0_val ;
   clr_tc_mask1_val_D = clr_tc_mask1_val ;
   clr_tc_mask2_val_D = clr_tc_mask2_val ;
   clr_tc_mask3_val_D = clr_tc_mask3_val ;
   clr_tc_mask4_val_D = clr_tc_mask4_val ;
   clr_tc_mask5_val_D = clr_tc_mask5_val ;
   clr_tc_mask6_val_D = clr_tc_mask6_val ;
   clr_tc_mask7_val_D = clr_tc_mask7_val ;
   clr_tc_mask8_val_D = clr_tc_mask8_val ;
   clr_tc_mask9_val_D = clr_tc_mask9_val ;
   clr_tc_mask10_val_D = clr_tc_mask10_val ;
   clr_tc_mask11_val_D = clr_tc_mask11_val ;
   inc_sel_mode_any_val_D = inc_sel_mode_any_val ;
   inc_tc_mask0_val_D = inc_tc_mask0_val ;
   inc_tc_mask1_val_D = inc_tc_mask1_val ;
   inc_tc_mask2_val_D = inc_tc_mask2_val ;
   inc_tc_mask3_val_D = inc_tc_mask3_val ;
   inc_tc_mask4_val_D = inc_tc_mask4_val ;
   inc_tc_mask5_val_D = inc_tc_mask5_val ;
   inc_tc_mask6_val_D = inc_tc_mask6_val ;
   inc_tc_mask7_val_D = inc_tc_mask7_val ;
   inc_tc_mask8_val_D = inc_tc_mask8_val ;
   inc_tc_mask9_val_D = inc_tc_mask9_val ;
   inc_tc_mask10_val_D = inc_tc_mask10_val ;
   inc_tc_mask11_val_D = inc_tc_mask11_val ;
   max_val0_r0_val_f0_D = max_val0_r0_val_f0 ;
   max_val0_r1_val_f1_D = max_val0_r1_val_f1 ;
   max_val1_r0_val_f0_D = max_val1_r0_val_f0 ;
   max_val1_r1_val_f1_D = max_val1_r1_val_f1 ;
   max_val2_r0_val_f0_D = max_val2_r0_val_f0 ;
   max_val2_r1_val_f1_D = max_val2_r1_val_f1 ;
   max_val3_r0_val_f0_D = max_val3_r0_val_f0 ;
   max_val3_r1_val_f1_D = max_val3_r1_val_f1 ;
   max_val4_r0_val_f0_D = max_val4_r0_val_f0 ;
   max_val4_r1_val_f1_D = max_val4_r1_val_f1 ;
   max_val5_r0_val_f0_D = max_val5_r0_val_f0 ;
   max_val5_r1_val_f1_D = max_val5_r1_val_f1 ;
   max_val6_r0_val_f0_D = max_val6_r0_val_f0 ;
   max_val6_r1_val_f1_D = max_val6_r1_val_f1 ;
   max_val7_r0_val_f0_D = max_val7_r0_val_f0 ;
   max_val7_r1_val_f1_D = max_val7_r1_val_f1 ;
   max_val8_r0_val_f0_D = max_val8_r0_val_f0 ;
   max_val8_r1_val_f1_D = max_val8_r1_val_f1 ;
   max_val9_r0_val_f0_D = max_val9_r0_val_f0 ;
   max_val9_r1_val_f1_D = max_val9_r1_val_f1 ;
   max_val10_r0_val_f0_D = max_val10_r0_val_f0 ;
   max_val10_r1_val_f1_D = max_val10_r1_val_f1 ;
   max_val11_r0_val_f0_D = max_val11_r0_val_f0 ;
   max_val11_r1_val_f1_D = max_val11_r1_val_f1 ;
   rel_mask0_val_D = rel_mask0_val ;
   rel_mask1_val_D = rel_mask1_val ;
   rel_mask2_val_D = rel_mask2_val ;
   rel_mask3_val_D = rel_mask3_val ;
   rel_mask4_val_D = rel_mask4_val ;
   rel_mask5_val_D = rel_mask5_val ;
   rel_mask6_val_D = rel_mask6_val ;
   rel_mask7_val_D = rel_mask7_val ;
   rel_mask8_val_D = rel_mask8_val ;
   rel_mask9_val_D = rel_mask9_val ;
   rel_mask10_val_D = rel_mask10_val ;
   rel_mask11_val_D = rel_mask11_val ;
   rel_mask12_val_D = rel_mask12_val ;
   rel_mask13_val_D = rel_mask13_val ;
   rel_mask14_val_D = rel_mask14_val ;
   rel_mask15_val_D = rel_mask15_val ;
   rel_mask16_val_D = rel_mask16_val ;
   rel_mask17_val_D = rel_mask17_val ;
   rel_mask18_val_D = rel_mask18_val ;
   rel_mask19_val_D = rel_mask19_val ;
   rel_mask20_val_D = rel_mask20_val ;
   rel_mask21_val_D = rel_mask21_val ;
   rel_mask22_val_D = rel_mask22_val ;
   rel_mask23_val_D = rel_mask23_val ;
   rel_mask24_val_D = rel_mask24_val ;
   rel_mask25_val_D = rel_mask25_val ;
   rel_mask26_val_D = rel_mask26_val ;
   rel_mask27_val_D = rel_mask27_val ;
   rel_mask28_val_D = rel_mask28_val ;
   rel_mask29_val_D = rel_mask29_val ;
   rel_mask30_val_D = rel_mask30_val ;
   rel_mask31_val_D = rel_mask31_val ;
   sel_delta_val_D = sel_delta_val ;
   trig_inv_val_D = trig_inv_val ;
   val_mask0_val_D = val_mask0_val ;
   val_mask1_val_D = val_mask1_val ;
   val_mask2_val_D = val_mask2_val ;
   val_mask3_val_D = val_mask3_val ;
   val_mask4_val_D = val_mask4_val ;
   val_mask5_val_D = val_mask5_val ;
   val_mask6_val_D = val_mask6_val ;
   val_mask7_val_D = val_mask7_val ;
   val_mask8_val_D = val_mask8_val ;
   val_mask9_val_D = val_mask9_val ;
   val_mask10_val_D = val_mask10_val ;
   val_mask11_val_D = val_mask11_val ;
   val_mask12_val_D = val_mask12_val ;
   val_mask13_val_D = val_mask13_val ;
   val_mask14_val_D = val_mask14_val ;
   val_mask15_val_D = val_mask15_val ;
   val_mask16_val_D = val_mask16_val ;
   val_mask17_val_D = val_mask17_val ;
   val_mask18_val_D = val_mask18_val ;
   val_mask19_val_D = val_mask19_val ;
   val_mask20_val_D = val_mask20_val ;
   val_mask21_val_D = val_mask21_val ;
   val_mask22_val_D = val_mask22_val ;
   val_mask23_val_D = val_mask23_val ;
   val_mask24_val_D = val_mask24_val ;
   val_mask25_val_D = val_mask25_val ;
   val_mask26_val_D = val_mask26_val ;
   val_mask27_val_D = val_mask27_val ;
   val_mask28_val_D = val_mask28_val ;
   val_mask29_val_D = val_mask29_val ;
   val_mask30_val_D = val_mask30_val ;
   val_mask31_val_D = val_mask31_val ;
   cnt0_r0_val_f0_D = cnt0_r0_val_f0 ;
   cnt0_r1_val_f1_D = cnt0_r1_val_f1 ;
   cnt1_r0_val_f0_D = cnt1_r0_val_f0 ;
   cnt1_r1_val_f1_D = cnt1_r1_val_f1 ;
   cnt2_r0_val_f0_D = cnt2_r0_val_f0 ;
   cnt2_r1_val_f1_D = cnt2_r1_val_f1 ;
   cnt3_r0_val_f0_D = cnt3_r0_val_f0 ;
   cnt3_r1_val_f1_D = cnt3_r1_val_f1 ;
   cnt4_r0_val_f0_D = cnt4_r0_val_f0 ;
   cnt4_r1_val_f1_D = cnt4_r1_val_f1 ;
   cnt5_r0_val_f0_D = cnt5_r0_val_f0 ;
   cnt5_r1_val_f1_D = cnt5_r1_val_f1 ;
   cnt6_r0_val_f0_D = cnt6_r0_val_f0 ;
   cnt6_r1_val_f1_D = cnt6_r1_val_f1 ;
   cnt7_r0_val_f0_D = cnt7_r0_val_f0 ;
   cnt7_r1_val_f1_D = cnt7_r1_val_f1 ;
   cnt8_r0_val_f0_D = cnt8_r0_val_f0 ;
   cnt8_r1_val_f1_D = cnt8_r1_val_f1 ;
   cnt9_r0_val_f0_D = cnt9_r0_val_f0 ;
   cnt9_r1_val_f1_D = cnt9_r1_val_f1 ;
   cnt10_r0_val_f0_D = cnt10_r0_val_f0 ;
   cnt10_r1_val_f1_D = cnt10_r1_val_f1 ;
   cnt11_r0_val_f0_D = cnt11_r0_val_f0 ;
   cnt11_r1_val_f1_D = cnt11_r1_val_f1 ;
   if (PSEL & PWRITE) begin
      case (PADDR)
         32'h0 : begin // chain_tc
            chain_tc_val_D =  PWDATA[ 15:0 ] ;
         end
         32'h4 : begin // clr_sel_mode_any
            clr_sel_mode_any_val_D =  PWDATA[ 11:0 ] ;
         end
         32'h8 : begin // clr_tc_mask0
            clr_tc_mask0_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hC : begin // clr_tc_mask1
            clr_tc_mask1_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h10 : begin // clr_tc_mask2
            clr_tc_mask2_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h14 : begin // clr_tc_mask3
            clr_tc_mask3_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h18 : begin // clr_tc_mask4
            clr_tc_mask4_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1C : begin // clr_tc_mask5
            clr_tc_mask5_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h20 : begin // clr_tc_mask6
            clr_tc_mask6_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h24 : begin // clr_tc_mask7
            clr_tc_mask7_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h28 : begin // clr_tc_mask8
            clr_tc_mask8_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h2C : begin // clr_tc_mask9
            clr_tc_mask9_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h30 : begin // clr_tc_mask10
            clr_tc_mask10_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h34 : begin // clr_tc_mask11
            clr_tc_mask11_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h38 : begin // inc_sel_mode_any
            inc_sel_mode_any_val_D =  PWDATA[ 11:0 ] ;
         end
         32'h3C : begin // inc_tc_mask0
            inc_tc_mask0_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h40 : begin // inc_tc_mask1
            inc_tc_mask1_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h44 : begin // inc_tc_mask2
            inc_tc_mask2_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h48 : begin // inc_tc_mask3
            inc_tc_mask3_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h4C : begin // inc_tc_mask4
            inc_tc_mask4_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h50 : begin // inc_tc_mask5
            inc_tc_mask5_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h54 : begin // inc_tc_mask6
            inc_tc_mask6_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h58 : begin // inc_tc_mask7
            inc_tc_mask7_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h5C : begin // inc_tc_mask8
            inc_tc_mask8_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h60 : begin // inc_tc_mask9
            inc_tc_mask9_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h64 : begin // inc_tc_mask10
            inc_tc_mask10_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h68 : begin // inc_tc_mask11
            inc_tc_mask11_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h6C : begin // max_val0_r0
            max_val0_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h70 : begin // max_val0_r1
            max_val0_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h74 : begin // max_val1_r0
            max_val1_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h78 : begin // max_val1_r1
            max_val1_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h7C : begin // max_val2_r0
            max_val2_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h80 : begin // max_val2_r1
            max_val2_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h84 : begin // max_val3_r0
            max_val3_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h88 : begin // max_val3_r1
            max_val3_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h8C : begin // max_val4_r0
            max_val4_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h90 : begin // max_val4_r1
            max_val4_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h94 : begin // max_val5_r0
            max_val5_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'h98 : begin // max_val5_r1
            max_val5_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'h9C : begin // max_val6_r0
            max_val6_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hA0 : begin // max_val6_r1
            max_val6_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hA4 : begin // max_val7_r0
            max_val7_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hA8 : begin // max_val7_r1
            max_val7_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hAC : begin // max_val8_r0
            max_val8_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hB0 : begin // max_val8_r1
            max_val8_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hB4 : begin // max_val9_r0
            max_val9_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hB8 : begin // max_val9_r1
            max_val9_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hBC : begin // max_val10_r0
            max_val10_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hC0 : begin // max_val10_r1
            max_val10_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hC4 : begin // max_val11_r0
            max_val11_r0_val_f0_D =  PWDATA[ 31:0 ] ;
         end
         32'hC8 : begin // max_val11_r1
            max_val11_r1_val_f1_D =  PWDATA[ 7:0 ] ;
         end
         32'hCC : begin // rel_mask0
            rel_mask0_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hD0 : begin // rel_mask1
            rel_mask1_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hD4 : begin // rel_mask2
            rel_mask2_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hD8 : begin // rel_mask3
            rel_mask3_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hDC : begin // rel_mask4
            rel_mask4_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hE0 : begin // rel_mask5
            rel_mask5_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hE4 : begin // rel_mask6
            rel_mask6_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hE8 : begin // rel_mask7
            rel_mask7_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hEC : begin // rel_mask8
            rel_mask8_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hF0 : begin // rel_mask9
            rel_mask9_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hF4 : begin // rel_mask10
            rel_mask10_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hF8 : begin // rel_mask11
            rel_mask11_val_D =  PWDATA[ 31:0 ] ;
         end
         32'hFC : begin // rel_mask12
            rel_mask12_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h100 : begin // rel_mask13
            rel_mask13_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h104 : begin // rel_mask14
            rel_mask14_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h108 : begin // rel_mask15
            rel_mask15_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h10C : begin // rel_mask16
            rel_mask16_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h110 : begin // rel_mask17
            rel_mask17_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h114 : begin // rel_mask18
            rel_mask18_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h118 : begin // rel_mask19
            rel_mask19_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h11C : begin // rel_mask20
            rel_mask20_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h120 : begin // rel_mask21
            rel_mask21_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h124 : begin // rel_mask22
            rel_mask22_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h128 : begin // rel_mask23
            rel_mask23_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h12C : begin // rel_mask24
            rel_mask24_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h130 : begin // rel_mask25
            rel_mask25_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h134 : begin // rel_mask26
            rel_mask26_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h138 : begin // rel_mask27
            rel_mask27_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h13C : begin // rel_mask28
            rel_mask28_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h140 : begin // rel_mask29
            rel_mask29_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h144 : begin // rel_mask30
            rel_mask30_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h148 : begin // rel_mask31
            rel_mask31_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h14C : begin // sel_delta
            sel_delta_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h150 : begin // trig_inv
            trig_inv_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h154 : begin // val_mask0
            val_mask0_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h158 : begin // val_mask1
            val_mask1_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h15C : begin // val_mask2
            val_mask2_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h160 : begin // val_mask3
            val_mask3_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h164 : begin // val_mask4
            val_mask4_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h168 : begin // val_mask5
            val_mask5_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h16C : begin // val_mask6
            val_mask6_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h170 : begin // val_mask7
            val_mask7_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h174 : begin // val_mask8
            val_mask8_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h178 : begin // val_mask9
            val_mask9_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h17C : begin // val_mask10
            val_mask10_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h180 : begin // val_mask11
            val_mask11_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h184 : begin // val_mask12
            val_mask12_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h188 : begin // val_mask13
            val_mask13_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h18C : begin // val_mask14
            val_mask14_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h190 : begin // val_mask15
            val_mask15_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h194 : begin // val_mask16
            val_mask16_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h198 : begin // val_mask17
            val_mask17_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h19C : begin // val_mask18
            val_mask18_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1A0 : begin // val_mask19
            val_mask19_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1A4 : begin // val_mask20
            val_mask20_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1A8 : begin // val_mask21
            val_mask21_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1AC : begin // val_mask22
            val_mask22_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1B0 : begin // val_mask23
            val_mask23_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1B4 : begin // val_mask24
            val_mask24_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1B8 : begin // val_mask25
            val_mask25_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1BC : begin // val_mask26
            val_mask26_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1C0 : begin // val_mask27
            val_mask27_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1C4 : begin // val_mask28
            val_mask28_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1C8 : begin // val_mask29
            val_mask29_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1CC : begin // val_mask30
            val_mask30_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1D0 : begin // val_mask31
            val_mask31_val_D =  PWDATA[ 31:0 ] ;
         end
         32'h1D4 : begin // cnt0_r0
         end
         32'h1D8 : begin // cnt0_r1
         end
         32'h1DC : begin // cnt1_r0
         end
         32'h1E0 : begin // cnt1_r1
         end
         32'h1E4 : begin // cnt2_r0
         end
         32'h1E8 : begin // cnt2_r1
         end
         32'h1EC : begin // cnt3_r0
         end
         32'h1F0 : begin // cnt3_r1
         end
         32'h1F4 : begin // cnt4_r0
         end
         32'h1F8 : begin // cnt4_r1
         end
         32'h1FC : begin // cnt5_r0
         end
         32'h200 : begin // cnt5_r1
         end
         32'h204 : begin // cnt6_r0
         end
         32'h208 : begin // cnt6_r1
         end
         32'h20C : begin // cnt7_r0
         end
         32'h210 : begin // cnt7_r1
         end
         32'h214 : begin // cnt8_r0
         end
         32'h218 : begin // cnt8_r1
         end
         32'h21C : begin // cnt9_r0
         end
         32'h220 : begin // cnt9_r1
         end
         32'h224 : begin // cnt10_r0
         end
         32'h228 : begin // cnt10_r1
         end
         32'h22C : begin // cnt11_r0
         end
         32'h230 : begin // cnt11_r1
         end
         default: begin
            wr_decerr = 1'b1 ;
         end
      endcase
   end

end

//--- FF ---
always @(posedge PCLK or negedge PRESETN) begin
   if (PRESETN == 0) begin
      chain_tc_val <= 16'h0 ;
      clr_sel_mode_any_val <= 12'h0 ;
      clr_tc_mask0_val <= 32'h0 ;
      clr_tc_mask1_val <= 32'h0 ;
      clr_tc_mask2_val <= 32'h0 ;
      clr_tc_mask3_val <= 32'h0 ;
      clr_tc_mask4_val <= 32'h0 ;
      clr_tc_mask5_val <= 32'h0 ;
      clr_tc_mask6_val <= 32'h0 ;
      clr_tc_mask7_val <= 32'h0 ;
      clr_tc_mask8_val <= 32'h0 ;
      clr_tc_mask9_val <= 32'h0 ;
      clr_tc_mask10_val <= 32'h0 ;
      clr_tc_mask11_val <= 32'h0 ;
      inc_sel_mode_any_val <= 12'h0 ;
      inc_tc_mask0_val <= 32'h0 ;
      inc_tc_mask1_val <= 32'h0 ;
      inc_tc_mask2_val <= 32'h0 ;
      inc_tc_mask3_val <= 32'h0 ;
      inc_tc_mask4_val <= 32'h0 ;
      inc_tc_mask5_val <= 32'h0 ;
      inc_tc_mask6_val <= 32'h0 ;
      inc_tc_mask7_val <= 32'h0 ;
      inc_tc_mask8_val <= 32'h0 ;
      inc_tc_mask9_val <= 32'h0 ;
      inc_tc_mask10_val <= 32'h0 ;
      inc_tc_mask11_val <= 32'h0 ;
      max_val0_r0_val_f0 <= 32'h1 ;
      max_val0_r1_val_f1 <= 8'h0 ;
      max_val1_r0_val_f0 <= 32'h1 ;
      max_val1_r1_val_f1 <= 8'h0 ;
      max_val2_r0_val_f0 <= 32'h1 ;
      max_val2_r1_val_f1 <= 8'h0 ;
      max_val3_r0_val_f0 <= 32'h1 ;
      max_val3_r1_val_f1 <= 8'h0 ;
      max_val4_r0_val_f0 <= 32'h1 ;
      max_val4_r1_val_f1 <= 8'h0 ;
      max_val5_r0_val_f0 <= 32'h1 ;
      max_val5_r1_val_f1 <= 8'h0 ;
      max_val6_r0_val_f0 <= 32'h1 ;
      max_val6_r1_val_f1 <= 8'h0 ;
      max_val7_r0_val_f0 <= 32'h1 ;
      max_val7_r1_val_f1 <= 8'h0 ;
      max_val8_r0_val_f0 <= 32'h1 ;
      max_val8_r1_val_f1 <= 8'h0 ;
      max_val9_r0_val_f0 <= 32'h1 ;
      max_val9_r1_val_f1 <= 8'h0 ;
      max_val10_r0_val_f0 <= 32'h1 ;
      max_val10_r1_val_f1 <= 8'h0 ;
      max_val11_r0_val_f0 <= 32'h1 ;
      max_val11_r1_val_f1 <= 8'h0 ;
      rel_mask0_val <= 32'h0 ;
      rel_mask1_val <= 32'h0 ;
      rel_mask2_val <= 32'h0 ;
      rel_mask3_val <= 32'h0 ;
      rel_mask4_val <= 32'h0 ;
      rel_mask5_val <= 32'h0 ;
      rel_mask6_val <= 32'h0 ;
      rel_mask7_val <= 32'h0 ;
      rel_mask8_val <= 32'h0 ;
      rel_mask9_val <= 32'h0 ;
      rel_mask10_val <= 32'h0 ;
      rel_mask11_val <= 32'h0 ;
      rel_mask12_val <= 32'h0 ;
      rel_mask13_val <= 32'h0 ;
      rel_mask14_val <= 32'h0 ;
      rel_mask15_val <= 32'h0 ;
      rel_mask16_val <= 32'h0 ;
      rel_mask17_val <= 32'h0 ;
      rel_mask18_val <= 32'h0 ;
      rel_mask19_val <= 32'h0 ;
      rel_mask20_val <= 32'h0 ;
      rel_mask21_val <= 32'h0 ;
      rel_mask22_val <= 32'h0 ;
      rel_mask23_val <= 32'h0 ;
      rel_mask24_val <= 32'h0 ;
      rel_mask25_val <= 32'h0 ;
      rel_mask26_val <= 32'h0 ;
      rel_mask27_val <= 32'h0 ;
      rel_mask28_val <= 32'h0 ;
      rel_mask29_val <= 32'h0 ;
      rel_mask30_val <= 32'h0 ;
      rel_mask31_val <= 32'h0 ;
      sel_delta_val <= 32'h0 ;
      trig_inv_val <= 32'h0 ;
      val_mask0_val <= 32'h0 ;
      val_mask1_val <= 32'h0 ;
      val_mask2_val <= 32'h0 ;
      val_mask3_val <= 32'h0 ;
      val_mask4_val <= 32'h0 ;
      val_mask5_val <= 32'h0 ;
      val_mask6_val <= 32'h0 ;
      val_mask7_val <= 32'h0 ;
      val_mask8_val <= 32'h0 ;
      val_mask9_val <= 32'h0 ;
      val_mask10_val <= 32'h0 ;
      val_mask11_val <= 32'h0 ;
      val_mask12_val <= 32'h0 ;
      val_mask13_val <= 32'h0 ;
      val_mask14_val <= 32'h0 ;
      val_mask15_val <= 32'h0 ;
      val_mask16_val <= 32'h0 ;
      val_mask17_val <= 32'h0 ;
      val_mask18_val <= 32'h0 ;
      val_mask19_val <= 32'h0 ;
      val_mask20_val <= 32'h0 ;
      val_mask21_val <= 32'h0 ;
      val_mask22_val <= 32'h0 ;
      val_mask23_val <= 32'h0 ;
      val_mask24_val <= 32'h0 ;
      val_mask25_val <= 32'h0 ;
      val_mask26_val <= 32'h0 ;
      val_mask27_val <= 32'h0 ;
      val_mask28_val <= 32'h0 ;
      val_mask29_val <= 32'h0 ;
      val_mask30_val <= 32'h0 ;
      val_mask31_val <= 32'h0 ;
   end
   else if (PSEL_Q & PENABLE) begin
      chain_tc_val <= chain_tc_val_D ;
      clr_sel_mode_any_val <= clr_sel_mode_any_val_D ;
      clr_tc_mask0_val <= clr_tc_mask0_val_D ;
      clr_tc_mask1_val <= clr_tc_mask1_val_D ;
      clr_tc_mask2_val <= clr_tc_mask2_val_D ;
      clr_tc_mask3_val <= clr_tc_mask3_val_D ;
      clr_tc_mask4_val <= clr_tc_mask4_val_D ;
      clr_tc_mask5_val <= clr_tc_mask5_val_D ;
      clr_tc_mask6_val <= clr_tc_mask6_val_D ;
      clr_tc_mask7_val <= clr_tc_mask7_val_D ;
      clr_tc_mask8_val <= clr_tc_mask8_val_D ;
      clr_tc_mask9_val <= clr_tc_mask9_val_D ;
      clr_tc_mask10_val <= clr_tc_mask10_val_D ;
      clr_tc_mask11_val <= clr_tc_mask11_val_D ;
      inc_sel_mode_any_val <= inc_sel_mode_any_val_D ;
      inc_tc_mask0_val <= inc_tc_mask0_val_D ;
      inc_tc_mask1_val <= inc_tc_mask1_val_D ;
      inc_tc_mask2_val <= inc_tc_mask2_val_D ;
      inc_tc_mask3_val <= inc_tc_mask3_val_D ;
      inc_tc_mask4_val <= inc_tc_mask4_val_D ;
      inc_tc_mask5_val <= inc_tc_mask5_val_D ;
      inc_tc_mask6_val <= inc_tc_mask6_val_D ;
      inc_tc_mask7_val <= inc_tc_mask7_val_D ;
      inc_tc_mask8_val <= inc_tc_mask8_val_D ;
      inc_tc_mask9_val <= inc_tc_mask9_val_D ;
      inc_tc_mask10_val <= inc_tc_mask10_val_D ;
      inc_tc_mask11_val <= inc_tc_mask11_val_D ;
      max_val0_r0_val_f0 <= max_val0_r0_val_f0_D ;
      max_val0_r1_val_f1 <= max_val0_r1_val_f1_D ;
      max_val1_r0_val_f0 <= max_val1_r0_val_f0_D ;
      max_val1_r1_val_f1 <= max_val1_r1_val_f1_D ;
      max_val2_r0_val_f0 <= max_val2_r0_val_f0_D ;
      max_val2_r1_val_f1 <= max_val2_r1_val_f1_D ;
      max_val3_r0_val_f0 <= max_val3_r0_val_f0_D ;
      max_val3_r1_val_f1 <= max_val3_r1_val_f1_D ;
      max_val4_r0_val_f0 <= max_val4_r0_val_f0_D ;
      max_val4_r1_val_f1 <= max_val4_r1_val_f1_D ;
      max_val5_r0_val_f0 <= max_val5_r0_val_f0_D ;
      max_val5_r1_val_f1 <= max_val5_r1_val_f1_D ;
      max_val6_r0_val_f0 <= max_val6_r0_val_f0_D ;
      max_val6_r1_val_f1 <= max_val6_r1_val_f1_D ;
      max_val7_r0_val_f0 <= max_val7_r0_val_f0_D ;
      max_val7_r1_val_f1 <= max_val7_r1_val_f1_D ;
      max_val8_r0_val_f0 <= max_val8_r0_val_f0_D ;
      max_val8_r1_val_f1 <= max_val8_r1_val_f1_D ;
      max_val9_r0_val_f0 <= max_val9_r0_val_f0_D ;
      max_val9_r1_val_f1 <= max_val9_r1_val_f1_D ;
      max_val10_r0_val_f0 <= max_val10_r0_val_f0_D ;
      max_val10_r1_val_f1 <= max_val10_r1_val_f1_D ;
      max_val11_r0_val_f0 <= max_val11_r0_val_f0_D ;
      max_val11_r1_val_f1 <= max_val11_r1_val_f1_D ;
      rel_mask0_val <= rel_mask0_val_D ;
      rel_mask1_val <= rel_mask1_val_D ;
      rel_mask2_val <= rel_mask2_val_D ;
      rel_mask3_val <= rel_mask3_val_D ;
      rel_mask4_val <= rel_mask4_val_D ;
      rel_mask5_val <= rel_mask5_val_D ;
      rel_mask6_val <= rel_mask6_val_D ;
      rel_mask7_val <= rel_mask7_val_D ;
      rel_mask8_val <= rel_mask8_val_D ;
      rel_mask9_val <= rel_mask9_val_D ;
      rel_mask10_val <= rel_mask10_val_D ;
      rel_mask11_val <= rel_mask11_val_D ;
      rel_mask12_val <= rel_mask12_val_D ;
      rel_mask13_val <= rel_mask13_val_D ;
      rel_mask14_val <= rel_mask14_val_D ;
      rel_mask15_val <= rel_mask15_val_D ;
      rel_mask16_val <= rel_mask16_val_D ;
      rel_mask17_val <= rel_mask17_val_D ;
      rel_mask18_val <= rel_mask18_val_D ;
      rel_mask19_val <= rel_mask19_val_D ;
      rel_mask20_val <= rel_mask20_val_D ;
      rel_mask21_val <= rel_mask21_val_D ;
      rel_mask22_val <= rel_mask22_val_D ;
      rel_mask23_val <= rel_mask23_val_D ;
      rel_mask24_val <= rel_mask24_val_D ;
      rel_mask25_val <= rel_mask25_val_D ;
      rel_mask26_val <= rel_mask26_val_D ;
      rel_mask27_val <= rel_mask27_val_D ;
      rel_mask28_val <= rel_mask28_val_D ;
      rel_mask29_val <= rel_mask29_val_D ;
      rel_mask30_val <= rel_mask30_val_D ;
      rel_mask31_val <= rel_mask31_val_D ;
      sel_delta_val <= sel_delta_val_D ;
      trig_inv_val <= trig_inv_val_D ;
      val_mask0_val <= val_mask0_val_D ;
      val_mask1_val <= val_mask1_val_D ;
      val_mask2_val <= val_mask2_val_D ;
      val_mask3_val <= val_mask3_val_D ;
      val_mask4_val <= val_mask4_val_D ;
      val_mask5_val <= val_mask5_val_D ;
      val_mask6_val <= val_mask6_val_D ;
      val_mask7_val <= val_mask7_val_D ;
      val_mask8_val <= val_mask8_val_D ;
      val_mask9_val <= val_mask9_val_D ;
      val_mask10_val <= val_mask10_val_D ;
      val_mask11_val <= val_mask11_val_D ;
      val_mask12_val <= val_mask12_val_D ;
      val_mask13_val <= val_mask13_val_D ;
      val_mask14_val <= val_mask14_val_D ;
      val_mask15_val <= val_mask15_val_D ;
      val_mask16_val <= val_mask16_val_D ;
      val_mask17_val <= val_mask17_val_D ;
      val_mask18_val <= val_mask18_val_D ;
      val_mask19_val <= val_mask19_val_D ;
      val_mask20_val <= val_mask20_val_D ;
      val_mask21_val <= val_mask21_val_D ;
      val_mask22_val <= val_mask22_val_D ;
      val_mask23_val <= val_mask23_val_D ;
      val_mask24_val <= val_mask24_val_D ;
      val_mask25_val <= val_mask25_val_D ;
      val_mask26_val <= val_mask26_val_D ;
      val_mask27_val <= val_mask27_val_D ;
      val_mask28_val <= val_mask28_val_D ;
      val_mask29_val <= val_mask29_val_D ;
      val_mask30_val <= val_mask30_val_D ;
      val_mask31_val <= val_mask31_val_D ;
   end
end

//--- APB 3.0
assign PREADY = PSEL_Q & PENABLE ;
assign PSLVERR = rd_decerr | wr_decerr;


endmodule

// FF count = 3432 

// vim:syntax=verilog:
